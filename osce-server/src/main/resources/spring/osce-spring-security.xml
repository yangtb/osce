<?xml version="1.0" encoding="utf-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <http pattern="/static/**" security="none"></http>
    <http pattern="/help/**" security="none"></http>
    <http pattern="**.js" security="none"></http>
    <http pattern="**.css" security="none"></http>
    <http pattern="**.jpg" security="none"></http>
    <http pattern="**.png" security="none"></http>

    <http pattern="/403" security="none"></http>
    <http pattern="/404" security="none"></http>
    <http pattern="/500" security="none"></http>
    <http pattern="/login/**" security="none"></http>
    <http pattern="/mobile/**" security="none"></http>
    <http pattern="/mobile**" security="none"></http>
    <http pattern="/r/**" security="none"></http>
    <http pattern="/logout/success" security="none"></http>

    <http use-expressions="true" entry-point-ref="http403RestfulEntryPoint"
          authentication-manager-ref="authenticationManager">
        <intercept-url pattern="/pf/**" access="permitAll"/>
        <!-- session超时处理-->
        <custom-filter position="FORM_LOGIN_FILTER" ref="loginAuthenticationFilter"/>
        <custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <access-denied-handler ref="accessDeniedHandler"/>
        <anonymous enabled="true" granted-authority="ROLE_ANONYMOUS" username="anonymousUser"/>
        <csrf disabled="true"/>
        <headers defaults-disabled="true">
            <cache-control/>
        </headers>
    </http>

    <security:global-method-security pre-post-annotations="enabled" jsr250-annotations="enabled"
                                     proxy-target-class="true"/>

    <!-- 授权异常处理 -->
    <beans:bean id="http403RestfulEntryPoint"
                class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>
    <!-- 认证异常处理 -->
    <beans:bean id="accessDeniedHandler" class="com.osce.server.security.PfAccessDeniedHandler">
        <beans:property name="errorPage" value="/403"/>
    </beans:bean>

    <beans:bean id="loginAuthenticationFilter" class="com.osce.server.security.PfLoginAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="filterProcessesUrl" value="/pfprodlogin"/>
        <beans:property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy"/>
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
        <beans:property name="rsaKeyPairQueue" ref="rsaKeyPairQueue"/>
        <beans:property name="imageCodeUtil" ref="imageCodeUtil"/>
    </beans:bean>

    <beans:bean id="sessionAuthenticationStrategy"
                class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="concurrentSessionControlAuthenticationStrategy"/>
                <beans:ref bean="registerSessionAuthenticationStrategy"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>
    <beans:bean id="concurrentSessionControlAuthenticationStrategy"
                class="com.osce.server.security.PfConcurrentSessionControlAuthenticationStrategy">
        <beans:constructor-arg ref="sessionRegistry"/>
        <beans:property name="maximumSessions" value="1"></beans:property>
        <beans:property name="exceptionIfMaximumExceeded" value="false"></beans:property>
    </beans:bean>
    <beans:bean id="registerSessionAuthenticationStrategy"
                class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
        <beans:constructor-arg ref="sessionRegistry"/>
    </beans:bean>
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>

    <beans:bean id="authenticationSuccessHandler" class="com.osce.server.security.PfUrlAuthenticationSuccessHandler">
        <beans:property name="targetUrl" value="/index"/>
    </beans:bean>
    <beans:bean id="authenticationFailureHandler" class="com.osce.server.security.PfUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/login"/>
    </beans:bean>

    <beans:bean id="logoutFilter" class="com.osce.server.security.PfLogoutFilter">
        <beans:property name="filterProcessesUrl" value="/openplatformlogout"/>
        <beans:constructor-arg name="logoutSuccessHandler" ref="logoutSuccessHandler"/>
        <beans:constructor-arg name="handlers">
            <beans:array>
                <beans:bean id="securityContextLogoutHandler"
                            class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"></beans:bean>
                <beans:bean id="cookieClearingLogoutHandler"
                            class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
                    <beans:constructor-arg>
                        <beans:array>
                            <beans:value>JSESSIONID</beans:value>
                        </beans:array>
                    </beans:constructor-arg>
                </beans:bean>
            </beans:array>
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="logoutSuccessHandler" class="com.osce.server.security.PfLogoutSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/logout/success"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="usernameAuthenticationProvider"/>
    </authentication-manager>

    <beans:bean id="usernameAuthenticationProvider"
                class="com.osce.server.security.UsernamePasswordAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
    </beans:bean>
    <beans:bean id="userDetailsService" class="com.osce.server.security.PfUserDetailsService">
        <!--<beans:property name="authorityService" ref="authorityService"/>
        <beans:property name="userService" ref="pfUserService"/>-->
        <beans:property name="customUsers" ref="customUserList"/>
    </beans:bean>

    <!-- 自定义认证用户，username可以与数据库中相同。当username与数据库中一样时，其Authorities将会把自定义的增加进去，其它属性以数据库为准 -->
    <util:list id="customUserList" list-class="java.util.ArrayList" value-type="com.osce.server.security.CustomUser">
        <beans:bean class="com.osce.server.security.CustomUser"
                    p:username="super" p:customAuthoritiesAsString="ROLE_SUPER"/>
    </util:list>

    <beans:bean id="securityContext" class="com.osce.server.security.SecurityContext"/>

    <beans:bean id="rsaKeyPairQueueInit" class="com.osce.server.security.rsa.RsaKeyPairQueueInit" init-method="init">
        <beans:property name="keyPairQueue" ref="rsaKeyPairQueue"/>
    </beans:bean>
    <beans:bean id="rsaKeyPairQueue" class="com.osce.server.security.rsa.RsaKeyPairQueue"/>

</beans:beans>
