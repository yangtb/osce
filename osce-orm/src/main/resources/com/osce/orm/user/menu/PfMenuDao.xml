<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.osce.orm.user.menu.PfMenuDao">

    <sql id="Base_Column_List">
        sm.menu_id ,sm.level ,sm.url , sm.name ,sm.parent_id , sm.sort ,
        sm.disable , sm.is_deleted , sm.gmt_create , sm.gmt_modify , sm.img
    </sql>

    <!-- 获取用户所有菜单 -->
    <select id="listMyMenus" resultType="com.osce.entity.SysFunction">
        SELECT
            sf.id, sf.function_url, sf.name, sf.level,
            sf.icon_source, sf.code, sf.parent_code, sf.position, sf.target
        FROM
            user_role ur
        INNER JOIN sys_role_menu srm ON srm.role_id = ur.role_id
        INNER JOIN sys_function sf ON sf.id = srm.menu_id
        WHERE
            ur.user_id = #{userId}
        AND sf.status = 'enabled'
	    AND sf.function_type = 1
	    AND ur.is_deleted = 'N'
	    AND srm.is_deleted = 'N'
        ORDER BY
            sf.level, sf.sort_num
    </select>

    <!-- 获取系统所有菜单 -->
    <select id="listAllMenus" resultType="com.osce.entity.SysFunction">
        SELECT
            sf.id, sf.function_url, sf.name, sf.level,
            sf.icon_source, sf.code, sf.parent_code, sf.position, sf.target
        FROM
            sys_function sf
        WHERE
            sf.status = 'enabled'
	    AND sf.function_type = 1
	    ORDER BY sf.level, sf.sort_num
    </select>

    <!-- 获取菜单 -->
    <select id="listMenus"
            resultType="com.osce.entity.SysFunction">
        SELECT  id , name , code , parent_code , sys_function_code , level , function_url ,
                sort_num , function_type , platform_type , status ,
                icon_type , icon_source , position , gmt_create , gmt_modify
        FROM
            sys_function sf
        WHERE
            1 = 1
        <if test="parentCode != null and parentCode != ''">
            AND sf.parent_code = #{parentCode}
        </if>
        <if test="name != null and name != ''">
            AND sf.name LIKE concat('%', #{name},'%')
        </if>
        <if test="level != null and level != 0">
            AND sf.level = #{level}
        </if>
        <if test="status != null">
            AND sf.status = #{status}
        </if>
        ORDER BY id
        limit #{offset}, #{limit}
    </select>

    <!-- 菜单总数 -->
    <select id="countMenus"  resultType="java.lang.Long">
        SELECT
            COUNT(1)
        FROM
            sys_function sf
        WHERE
            1 = 1
        <if test="parentCode != null and parentCode != ''">
            AND sf.parent_code = #{parentCode}
        </if>
        <if test="name != null and name != ''">
            AND sf.name LIKE concat('%', #{name},'%')
        </if>
        <if test="level != null and level != 0">
            AND sf.level = #{level}
        </if>
        <if test="status != null">
            AND sf.status = #{status}
        </if>
    </select>

    <!-- 判断是否存在该菜单 -->
    <select id="isExistMenu" resultType="java.lang.Boolean">
        SELECT COUNT(1) FROM sys_function WHERE code = #{code}
    </select>

    <!-- 新增菜单 -->
    <insert id="addMenu" >
        INSERT INTO sys_function (
          	name , code , parent_code , sys_function_code , level ,
            function_url , sort_num , function_type , platform_type ,
            status , icon_type , icon_source , position , target,  gmt_create , gmt_modify
        )
        VALUES(
          #{name}, #{code} , #{parentCode} , #{sysFunctionCode} , #{level} ,
          #{functionUrl} , #{sortNum} , #{functionType} , #{platformType} ,
          #{status} , #{iconType} , #{iconSource} , #{position} , #{target} , NOW() , NOW()
        )
    </insert>

    <!-- 编辑菜单 -->
    <update id="updateMenu">
        UPDATE sys_function
        SET name = #{name} ,
            code = #{code} ,
            parent_code = #{parentCode} ,
            sys_function_code = #{sysFunctionCode} ,
            level = #{level} ,
            function_url = #{functionUrl} ,
            sort_num = #{sortNum} ,
            function_type = #{functionType} ,
            platform_type = #{platformType} ,
            status = #{status} ,
            icon_type = #{iconType} ,
            icon_source = #{iconSource} ,
            position = #{position} ,
            target = #{target} ,
            gmt_modify = NOW()
        WHERE
            id = #{id}
    </update>

    <!-- 修改菜单状态 -->
    <update id="changeStatusMenu">
        UPDATE sys_function SET status = #{status}
        WHERE
        id in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>

    <!-- 获取系统所有菜单【tree】 -->
    <select id="listSysMenus" resultType="com.osce.vo.user.menu.PfMenuZtreeVo">
        SELECT
            sf.id as menuId,
            sf.code as id,
            sf.name as name ,
            sf.parent_code as pId,
            true as open,
            sf.level,
            sf.position
        FROM
            sys_function sf
        WHERE
            sf.status = 'enabled'
        ORDER BY sf.level, sf.sort_num
    </select>

    <!-- 获取角色拥有菜单 -->
    <select id="listMenuRoleTree" resultType="com.osce.vo.user.menu.PfMenuZtreeVo">
        SELECT
             sf.code as id,
             sf.parent_code as pId,
             IF(srm.role_menu_id is null , FALSE , TRUE) checked
        FROM
            sys_function sf
        LEFT JOIN sys_role_menu srm ON srm.menu_id = sf.id and srm.role_id = #{roleId}
        WHERE
             sf.status = 'enabled'
    </select>

    <select id="listAnonymousUserMenus" resultType="com.osce.entity.SysFunction">
        SELECT
            sf.id, sf.function_url, sf.name, sf.level,
            sf.icon_source, sf.code, sf.parent_code, sf.position, sf.target
        FROM
            sys_function sf
        LEFT JOIN sys_role_menu srm ON srm.menu_id = sf.id
        left join sys_role sr on srm.role_id = sr.role_id
        WHERE
            sf.status = 'enabled'
        AND sr.code='PFTOU'
        AND sf.function_type = 1
        ORDER BY sf.level, sf.sort_num
    </select>


</mapper>