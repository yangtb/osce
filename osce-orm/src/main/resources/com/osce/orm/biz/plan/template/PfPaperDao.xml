<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.osce.orm.biz.plan.template.PfPaperDao">

    <insert id="addTdItemStore" useGeneratedKeys="true" keyProperty="idItemStore">
        INSERT INTO td_item_store
        (
        <trim suffixOverrides=",">
            <if test="idItemStore!=null">
                id_item_store,
            </if>
            <if test="idModel!=null">
                id_model,
            </if>
            <if test="idOrg!=null">
                id_org,
            </if>
            <if test="idItemStoreFrom!=null">
                id_item_store_from,
            </if>
            <if test="naItemStore!=null">
                na_item_store,
            </if>
            <if test="scorePass!=null">
                score_pass,
            </if>
            <if test="fgItemFromPublic!=null">
                fg_item_from_public,
            </if>
            <if test="fgItemFromPrivate!=null">
                fg_item_from_private,
            </if>
            <if test="fgItemFromImport!=null">
                fg_item_from_import,
            </if>
            <if test="desItemStore!=null">
                des_item_store,
            </if>
            <if test="fgChooseHist!=null">
                fg_choose_hist,
            </if>
                fg_active,
            <if test="fgValid!=null">
                fg_valid,
            </if>
            <if test="sort!=null">
                sort,
            </if>
            <if test="creator!=null">
                creator,
            </if>
                gmt_create,
            <if test="operator!=null">
                operator,
            </if>
                gmt_modify,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="idItemStore!=null">
                #{idItemStore},
            </if>
            <if test="idModel!=null">
                #{idModel},
            </if>
            <if test="idOrg!=null">
                #{idOrg},
            </if>
            <if test="idItemStoreFrom!=null">
                #{idItemStoreFrom},
            </if>
            <if test="naItemStore!=null">
                #{naItemStore},
            </if>
            <if test="scorePass!=null">
                #{scorePass},
            </if>
            <if test="fgItemFromPublic!=null">
                #{fgItemFromPublic},
            </if>
            <if test="fgItemFromPrivate!=null">
                #{fgItemFromPrivate},
            </if>
            <if test="fgItemFromImport!=null">
                #{fgItemFromImport},
            </if>
            <if test="desItemStore!=null">
                #{desItemStore},
            </if>
            <if test="fgChooseHist!=null">
                #{fgChooseHist},
            </if>
                '1',
            <if test="fgValid!=null">
                #{fgValid},
            </if>
            <if test="sort!=null">
                #{sort},
            </if>
            <if test="creator!=null">
                #{creator},
            </if>
                now(),
            <if test="operator!=null">
                #{operator},
            </if>
                now(),
        </trim>
        )
    </insert>

    <insert id="addTdItemArgTypes">
        INSERT INTO td_item_arg_type(id_item_store, sd_item_ca, num_type, score_type)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.idItemStore}, #{item.sdItemCa}, #{item.numType}, #{item.scoreType})
        </foreach>
    </insert>

    <insert id="addSdItemLevels">
        INSERT INTO td_item_arg_level(id_item_store, sd_item_level, weight_level)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.idItemStore}, #{item.sdItemLevel}, #{item.weightLevel})
        </foreach>
    </insert>
    <insert id="addSpCase" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO td_sp_case
        (
        <trim suffixOverrides=",">
            <if test="id!=null">
                id,
            </if>
            <if test="idCase!=null">
                id_case,
            </if>
            <if test="idModel!=null">
                id_model,
            </if>
            <if test="idFrom!=null">
                id_from,
            </if>
            <if test="idOrg!=null">
                id_org,
            </if>
            <if test="naSpCase!=null and naSpCase!=''">
                na_sp_case,
            </if>
            <if test="scorePass!=null">
                score_pass,
            </if>
            <if test="sdSpCaseCa!=null and sdSpCaseCa!=''">
                sd_sp_case_ca,
            </if>
            <if test="desSpCase!=null and desSpCase!=''">
                des_sp_case,
            </if>
            <if test="desProb!=null and desProb!=''">
                des_prob,
            </if>
            <if test="desCurDie!=null and desCurDie!=''">
                des_cur_die,
            </if>
            <if test="desHisDie!=null and desHisDie!=''">
                des_his_die,
            </if>
            <if test="desPatDie!=null and desPatDie!=''">
                des_pat_die,
            </if>
            <if test="desFamDie!=null and desFamDie!=''">
                des_fam_die,
            </if>
            <if test="desPoints!=null and desPoints!=''">
                des_points,
            </if>
            <if test="docSp!=null and docSp!=''">
                doc_sp,
            </if>
            <if test="fgActive!=null">
                fg_active,
            </if>
            <if test="fgValid!=null">
                fg_valid,
            </if>
            <if test="sort!=null">
                sort,
            </if>
            <if test="creator!=null and creator!=''">
                creator,
            </if>
                gmt_create,
            <if test="operator!=null and operator!=''">
                operator,
            </if>
                gmt_modify,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="idCase!=null">
                #{idCase},
            </if>
            <if test="idModel!=null">
                #{idModel},
            </if>
            <if test="idFrom!=null">
                #{idFrom},
            </if>
            <if test="idOrg!=null">
                #{idOrg},
            </if>
            <if test="naSpCase!=null and naSpCase!=''">
                #{naSpCase},
            </if>
            <if test="scorePass!=null">
                #{scorePass},
            </if>
            <if test="sdSpCaseCa!=null and sdSpCaseCa!=''">
                #{sdSpCaseCa},
            </if>
            <if test="desSpCase!=null and desSpCase!=''">
                #{desSpCase},
            </if>
            <if test="desProb!=null and desProb!=''">
                #{desProb},
            </if>
            <if test="desCurDie!=null and desCurDie!=''">
                #{desCurDie},
            </if>
            <if test="desHisDie!=null and desHisDie!=''">
                #{desHisDie},
            </if>
            <if test="desPatDie!=null and desPatDie!=''">
                #{desPatDie},
            </if>
            <if test="desFamDie!=null and desFamDie!=''">
                #{desFamDie},
            </if>
            <if test="desPoints!=null and desPoints!=''">
                #{desPoints},
            </if>
            <if test="docSp!=null and docSp!=''">
                #{docSp},
            </if>
            <if test="fgActive!=null">
                #{fgActive},
            </if>
            <if test="fgValid!=null">
                #{fgValid},
            </if>
            <if test="sort!=null">
                #{sort},
            </if>
            <if test="creator!=null and creator!=''">
                #{creator},
            </if>
                now(),
            <if test="operator!=null and operator!=''">
                #{operator},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="addSkillCase" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO td_skill_case
        (
        <trim suffixOverrides=",">
            <if test="id!=null">
                id,
            </if>
            <if test="idSkillCase!=null">
                id_skill_case,
            </if>
            <if test="idModel!=null">
                id_model,
            </if>
            <if test="idOrg!=null">
                id_org,
            </if>
            <if test="idFrom!=null">
                id_from,
            </if>
            <if test="naSkillCase!=null and naSkillCase!=''">
                na_skill_case,
            </if>
            <if test="scorePass!=null">
                score_pass,
            </if>
            <if test="sdSkillCaseCa!=null and sdSkillCaseCa!=''">
                sd_skill_case_ca,
            </if>
            <if test="desSkillCase!=null and desSkillCase!=''">
                des_skill_case,
            </if>
            <if test="fgActive!=null">
                fg_active,
            </if>
            <if test="fgValid!=null">
                fg_valid,
            </if>
            <if test="sort!=null">
                sort,
            </if>
            <if test="creator!=null and creator!=''">
                creator,
            </if>
                gmt_create,
            <if test="operator!=null and operator!=''">
                operator,
            </if>
                gmt_modify,
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="idSkillCase!=null">
                #{idSkillCase},
            </if>
            <if test="idModel!=null">
                #{idModel},
            </if>
            <if test="idOrg!=null">
                #{idOrg},
            </if>
            <if test="idFrom!=null">
                #{idFrom},
            </if>
            <if test="naSkillCase!=null and naSkillCase!=''">
                #{naSkillCase},
            </if>
            <if test="scorePass!=null">
                #{scorePass},
            </if>
            <if test="sdSkillCaseCa!=null and sdSkillCaseCa!=''">
                #{sdSkillCaseCa},
            </if>
            <if test="desSkillCase!=null and desSkillCase!=''">
                #{desSkillCase},
            </if>
            <if test="fgActive!=null">
                #{fgActive},
            </if>
            <if test="fgValid!=null">
                #{fgValid},
            </if>
            <if test="sort!=null">
                #{sort},
            </if>
            <if test="creator!=null and creator!=''">
                #{creator},
            </if>
                now(),
            <if test="operator!=null and operator!=''">
                #{operator},
            </if>
                now(),
        </trim>
        )
    </insert>
    <insert id="addTdItemSection">
        INSERT INTO td_item_section(
            id_item_store ,
            na_item_section ,
            sort ,
            fg_active
        )
        SELECT
            #{idItemStore} ,
            na_item_section ,
            sort ,
            0
        FROM
            ibm_item_section
        WHERE
            id_item_store = #{idItemStoreFrom}
    </insert>

    <update id="editTdItemStore">
        UPDATE td_item_store
        SET
        <trim suffixOverrides=",">
            <if test="idModel != null">
                id_model = #{idModel},
            </if>
            <if test="idOrg != null">
                id_org = #{idOrg},
            </if>
            <if test="idItemStoreFrom != null">
                id_item_store_from = #{idItemStoreFrom},
            </if>
            <if test="naItemStore != null and naItemStore!=''">
                na_item_store = #{naItemStore},
            </if>
            <if test="scorePass != null">
                score_pass = #{scorePass},
            </if>
            <if test="fgItemFromPublic != null and fgItemFromPublic!=''">
                fg_item_from_public = #{fgItemFromPublic},
            </if>
            <if test="fgItemFromPrivate != null and fgItemFromPrivate!=''">
                fg_item_from_private = #{fgItemFromPrivate},
            </if>
            <if test="fgItemFromImport != null and fgItemFromImport!=''">
                fg_item_from_import = #{fgItemFromImport},
            </if>
            <if test="desItemStore != null and desItemStore!=''">
                des_item_store = #{desItemStore},
            </if>
            <if test="fgChooseHist != null and fgChooseHist!=''">
                fg_choose_hist = #{fgChooseHist},
            </if>
            <if test="fgActive != null and fgActive!=''">
                fg_active = #{fgActive},
            </if>
            <if test="fgValid != null and fgValid!=''">
                fg_valid = #{fgValid},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="creator != null and creator!=''">
                creator = #{creator},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="operator != null and operator!=''">
                operator = #{operator},
            </if>
                gmt_modify = now(),
        </trim>
        WHERE
            id_item_store = #{idItemStore}
    </update>
    <update id="editTdItemArgTypes">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update td_item_arg_type
            <set>
                id_item_store = #{item.idItemStore},
                sd_item_ca = #{item.sdItemCa},
                num_type = #{item.numType},
                score_type = #{item.scoreType}
            </set>
            where id_item_arg_type = #{item.idItemArgType}
        </foreach>
    </update>
    <update id="editSdItemLevels">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update td_item_arg_level
            <set>
                id_item_store = #{item.idItemStore},
                sd_item_level = #{item.sdItemLevel},
                weight_level = #{item.weightLevel}
            </set>
            where id_item_arg_level = #{item.idItemArgLevel}
        </foreach>
    </update>
    <update id="editTdItemSections">
        UPDATE
            td_item_section
        SET
            fg_active = '1'
        WHERE
            id_item_section in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="updateItemByIdItemStore">
        UPDATE
            td_item
        SET
            fg_must = #{status}
        WHERE
            id_item_store = #{idItemStore}
    </update>
    <update id="updateItemByIds">
        UPDATE
            td_item
        SET
            fg_must = #{status}
        WHERE
            id_item in (
        <foreach collection="list" item="item" separator="," >
            #{item}
        </foreach>
        )
    </update>
    <update id="delPaper">
        UPDATE td_item_store
        SET
            <choose>
                <when test="operationType == 'updateStatus'">
                    fg_active = #{status},
                </when>
                <otherwise>
                    fg_valid = #{status},
                    fg_active = '0',
                </otherwise>
            </choose>
            operator = #{operator},
            gmt_modify = now()
        WHERE
            id_item_store in (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="editSpCase">
        UPDATE td_sp_case
        SET
        <trim suffixOverrides=",">
            <if test="idCase != null and idCase!=''">
                id_case = #{idCase},
            </if>
            <if test="idModel != null">
                id_model = #{idModel},
            </if>
            <if test="idFrom != null">
                id_from = #{idFrom},
            </if>
            <if test="idOrg != null">
                id_org = #{idOrg},
            </if>
            <if test="naSpCase != null and naSpCase!=''">
                na_sp_case = #{naSpCase},
            </if>
            <if test="scorePass != null">
                score_pass = #{scorePass},
            </if>
            <if test="sdSpCaseCa != null and sdSpCaseCa!=''">
                sd_sp_case_ca = #{sdSpCaseCa},
            </if>
            <if test="desSpCase != null and desSpCase!=''">
                des_sp_case = #{desSpCase},
            </if>
            <if test="desProb != null and desProb!=''">
                des_prob = #{desProb},
            </if>
            <if test="desCurDie != null and desCurDie!=''">
                des_cur_die = #{desCurDie},
            </if>
            <if test="desHisDie != null and desHisDie!=''">
                des_his_die = #{desHisDie},
            </if>
            <if test="desPatDie != null and desPatDie!=''">
                des_pat_die = #{desPatDie},
            </if>
            <if test="desFamDie != null and desFamDie!=''">
                des_fam_die = #{desFamDie},
            </if>
            <if test="desPoints != null and desPoints!=''">
                des_points = #{desPoints},
            </if>
            <if test="docSp != null and docSp!=''">
                doc_sp = #{docSp},
            </if>
            <if test="fgActive != null and fgActive!=''">
                fg_active = #{fgActive},
            </if>
            <if test="fgValid != null and fgValid!=''">
                fg_valid = #{fgValid},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="creator != null and creator!=''">
                creator = #{creator},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="operator != null and operator!=''">
                operator = #{operator},
            </if>
                gmt_modify = now(),
        </trim>
        WHERE
            id_case = #{idCase}
    </update>
    <update id="delSp">
        UPDATE td_sp_case
        SET
        <choose>
            <when test="operationType == 'updateStatus'">
                fg_active = #{status},
            </when>
            <otherwise>
                fg_valid = #{status},
                fg_active = '0',
            </otherwise>
        </choose>
            operator = #{operator},
            gmt_modify = now()
        WHERE
            id in (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="editSkillCase">
        UPDATE td_skill_case
        SET
        <trim suffixOverrides=",">
            <if test="idSkillCase != null and idSkillCase!=''">
                id_skill_case = #{idSkillCase},
            </if>
            <if test="idModel != null">
                id_model = #{idModel},
            </if>
            <if test="idOrg != null">
                id_org = #{idOrg},
            </if>
            <if test="idFrom != null">
                id_from = #{idFrom},
            </if>
            <if test="naSkillCase != null and naSkillCase!=''">
                na_skill_case = #{naSkillCase},
            </if>
            <if test="scorePass != null">
                score_pass = #{scorePass},
            </if>
            <if test="sdSkillCaseCa != null and sdSkillCaseCa!=''">
                sd_skill_case_ca = #{sdSkillCaseCa},
            </if>
            <if test="desSkillCase != null and desSkillCase!=''">
                des_skill_case = #{desSkillCase},
            </if>
            <if test="fgActive != null and fgActive!=''">
                fg_active = #{fgActive},
            </if>
            <if test="fgValid != null and fgValid!=''">
                fg_valid = #{fgValid},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="creator != null and creator!=''">
                creator = #{creator},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="operator != null and operator!=''">
                operator = #{operator},
            </if>
                gmt_modify = now(),
        </trim>
        WHERE
            id = #{id}
    </update>
    <update id="delSkillCase">
        UPDATE td_skill_case
        SET
        <choose>
            <when test="operationType == 'updateStatus'">
                fg_active = #{status},
            </when>
            <otherwise>
                fg_valid = #{status},
                fg_active = '0',
            </otherwise>
        </choose>
            operator = #{operator},
            gmt_modify = now()
        WHERE
        id in (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="saveTdPaper">
        update tp_ins_station
        set id_paper = #{idPaper} ,
            id_score_sheet = #{idScoreSheet}
        where id_ins_station = #{idInsStation}
    </update>
    <update id="saveTdAllPaper">
        UPDATE tp_ins_station
        SET id_paper = #{idPaper} ,
            id_score_sheet = #{idScoreSheet}
        WHERE
            id_plan = #{idPlan}
        AND sd_skill_ca = #{sdSkillCa}
    </update>
    <delete id="delTdItemSection">
        delete from td_item_section where id_item_store = #{idItemStore}
    </delete>
    <delete id="delTdItemArgTypes">
        delete from td_item_arg_type where id_item_store = #{idItemStore}
    </delete>

    <select id="listLeft" resultType="com.osce.vo.biz.plan.template.PaperLeftVo">
        SELECT
            a.sd_skill_ca ,
            a.sd_station_ca ,
            group_concat(DISTINCT d.na_room SEPARATOR '、') AS rooms
        FROM
            td_station a
        LEFT JOIN td_area b ON a.id_area = b.id_area
        LEFT JOIN td_site c ON b.id_area = c.id_area
        LEFT JOIN erp_room d ON c.id_room = d.id_room
        WHERE
            b.id_model = #{idModel}
        GROUP BY
            a.sd_skill_ca ,
            a.sd_station_ca
    </select>
    <select id="selectTdItemStore" resultType="com.osce.entity.TdItemStore">
        SELECT
            a.id_item_store ,
            a.id_model ,
            a.id_org ,
            a.id_item_store_from ,
            a.na_item_store ,
            a.score_pass ,
            a.fg_item_from_public ,
            a.fg_item_from_private ,
            a.fg_item_from_import ,
            a.des_item_store ,
            a.fg_choose_hist ,
            b.na_item_store AS naItemStoreFrom
        FROM
            td_item_store a
        LEFT JOIN ibm_item_store b ON b.id_item_store = a.id_item_store_from
        WHERE
            a.id_model = #{idModel}
        AND a.id_item_store = #{idItemStore}
        AND a.id_org = #{idOrg}
    </select>
    <select id="listTdItemArgType" resultType="com.osce.entity.TdItemArgType">
        SELECT
            id_item_arg_type ,
            id_item_store ,
            sd_item_ca ,
            num_type ,
            score_type
        FROM
            td_item_arg_type
        WHERE
            id_item_store = #{idItemStore}
    </select>
    <select id="listSdItemLevel" resultType="com.osce.entity.TdItemArgLevel">
        SELECT
            id_item_arg_level ,
            id_item_store ,
            sd_item_level ,
            weight_level
        FROM
            td_item_arg_level
        WHERE
            id_item_store = #{idItemStore}
    </select>
    <select id="selectTdItemSection" resultType="com.osce.entity.TdItemSection">
        SELECT
            id_item_section ,
            id_item_store ,
            na_item_section ,
            fg_active
        FROM
            td_item_section
        WHERE
            id_item_store = #{idItemStore}
        order by sort
    </select>
    <select id="callItemStoreIns" statementType="CALLABLE">
         call P_ITEM_STORE_INS(
            #{parIdItemStore,mode=IN,jdbcType=INTEGER},
            #{parCode,mode=OUT,jdbcType=INTEGER},
            #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="listItemTotal" resultType="com.osce.vo.biz.plan.template.PaperItemTotalVo">
        SELECT
            item.sd_item_ca ,
            COUNT(1) total
        FROM
            td_item_store store
        LEFT OUTER JOIN td_item_section section ON store.id_item_store = section.id_item_store
        LEFT OUTER JOIN td_item item ON section.id_item_section = item.id_item_section
        WHERE
            store.id_item_store = #{idItemStore}
        <!--AND section.fg_active = '1'-->
        AND item.sd_item_from IN ( IF(store.fg_item_from_public = '1','1',''),IF(store.fg_item_from_private = '1','2',''),IF(store.fg_item_from_import = '1','3','') )
        AND (
                ( store.fg_choose_hist = '1'
                    AND id_item_from NOT IN (
                            SELECT
                                id_item_from
                            FROM
                                td_item_store
                            LEFT OUTER JOIN td_item ON td_item_store.id_item_store = td_item.id_item_store
                            WHERE
                                td_item_store.id_model = store.id_model
                            AND td_item_store.id_item_store != td_item.id_item_store
                            AND td_item.fg_active = '1'
                        )
            ) OR store.fg_choose_hist = '0'
        )
        GROUP BY  item.sd_item_ca
    </select>

    <select id="listItem" resultType="com.osce.entity.TdItem">
        SELECT
            id_item ,
            main_item ,
            (
                CASE sd_item_ca
                WHEN '1' THEN 'A1'
                WHEN '2' THEN 'A2'
                WHEN '3' THEN 'B1'
                END
            ) AS sd_item_ca ,
            (
                CASE sd_item_level
                    WHEN '1' THEN '易'
                    WHEN '2' THEN '较易'
                    WHEN '3' THEN '中'
                    WHEN '4' THEN '难'
                    WHEN '5' THEN '较难'
                END
            ) AS sd_item_level ,
            (
                CASE sd_item_from
                    WHEN '1' THEN '题库试题'
                    WHEN '2' THEN '私有试题'
                    WHEN '2' THEN '导入试题'
                END
            ) AS sd_item_from ,
            fg_must
        FROM
            td_item
        WHERE
            id_item_store = #{idItemStore}
        <if test="fgActive != null and fgActive != ''">
            and fg_active = #{fgActive}
        </if>
        ORDER BY cast(sd_item_level as UNSIGNED INTEGER)
        limit #{offset}, #{limit}
    </select>
    <select id="countItem" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            td_item
        WHERE
            id_item_store = #{idItemStore}
        <if test="fgActive != null and fgActive != ''">
            and fg_active = #{fgActive}
        </if>
    </select>
    <select id="callGeneratePaper" statementType="CALLABLE">
         call P_ITEM_PAPER_GENERATE(
            #{parIdItemStore,mode=IN,jdbcType=INTEGER},
            #{parCode,mode=OUT,jdbcType=INTEGER},
            #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="countPaper" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            td_item_store a
        WHERE
            a.id_model = #{idModel}
        AND a.fg_active = '1'
    </select>
    <select id="listPaper" resultType="com.osce.vo.biz.plan.template.PfPaperVo">
        SELECT
            a.id_item_store ,
            a.na_item_store ,
            c.na_item_store AS na_item_store_from ,
            count(DISTINCT b.id_item) itemNum ,
            sum(b.score_default) AS totalScore ,
            a.gmt_create
        FROM
            td_item_store a
        LEFT JOIN td_item b ON a.id_item_store = b.id_item_store
        AND b.fg_active = 1
        LEFT JOIN ibm_item_store c ON a.id_item_store_from = c.id_item_store
        WHERE
            a.id_model = #{idModel}
        AND a.fg_active = '1'
        GROUP BY
            a.id_item_store ,
            a.na_item_store ,
            c.na_item_store ,
            a.gmt_create
        limit #{offset}, #{limit}
    </select>
    <select id="callSpCase" statementType="CALLABLE">
         call P_SP_INS(
            #{parId,mode=IN,jdbcType=INTEGER},
            #{parCode,mode=OUT,jdbcType=INTEGER},
            #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="countSp" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            td_sp_case
        WHERE
            id_model = #{idModel}
        and fg_valid = '0'
    </select>
    <select id="listSp" resultType="com.osce.vo.biz.plan.template.sp.TdSpCaseVo">
        SELECT
            a.id ,
            a.id_case ,
            a.id_model ,
            a.id_org ,
            a.id_from ,
            a.na_sp_case ,
            a.score_pass ,
            a.sd_sp_case_ca ,
            a.des_sp_case ,
            a.des_prob ,
            a.des_cur_die ,
            a.des_his_die ,
            a.des_pat_die ,
            a.des_fam_die ,
            a.des_points ,
            a.doc_sp ,
            a.fg_active ,
            a.fg_valid ,
            a.sort ,
            a.creator ,
            a.gmt_create ,
            a.operator ,
            a.gmt_modify ,
            count(c.id_score_sheet) AS sheetNum ,
            IFNULL(sum(d.score) , 0) AS sheetTotalScore ,
            b.na_sp_case AS naSpCaseFrom
        FROM
            td_sp_case a
        LEFT JOIN cob_sp_case b ON a.id_from = b.id
        LEFT JOIN td_score_sheet c ON c.id_case = a.id_case AND c.fg_active = '1'
        LEFT JOIN td_score_item d ON c.id_score_sheet = d.id_score_sheet AND d.fg_active = '1'
        WHERE
            a.id_model = #{idModel}
        AND a.fg_valid = '0'
        GROUP BY
            a.id ,
            a.id_case ,
            a.id_model ,
            a.id_org ,
            a.id_from ,
            a.na_sp_case ,
            a.score_pass ,
            a.sd_sp_case_ca ,
            a.des_sp_case ,
            a.des_prob ,
            a.des_cur_die ,
            a.des_his_die ,
            a.des_pat_die ,
            a.des_fam_die ,
            a.des_points ,
            a.doc_sp ,
            a.fg_active ,
            a.fg_valid ,
            a.sort ,
            a.creator ,
            a.gmt_create ,
            a.operator ,
            a.gmt_modify ,
            b.na_sp_case
        limit #{offset}, #{limit}
    </select>
    <select id="callSkillCase" statementType="CALLABLE">
         call P_SKILL_INS(
            #{parId,mode=IN,jdbcType=INTEGER},
            #{parCode,mode=OUT,jdbcType=INTEGER},
            #{parMsg,mode=OUT,jdbcType=VARCHAR}
        )
    </select>
    <select id="countSkill" resultType="java.lang.Long">
        SELECT
            count(1)
        FROM
            td_skill_case
        WHERE
            id_model = #{idModel}
        and fg_valid = '0'
    </select>
    <select id="listSkill" resultType="com.osce.vo.biz.plan.template.skill.TdSkillCaseVo">
        SELECT
            a.id ,
            a.id_skill_case ,
            a.id_model ,
            a.id_org ,
            a.id_from ,
            a.na_skill_case ,
            a.score_pass ,
            a.sd_skill_case_ca ,
            a.des_skill_case ,
            a.fg_active ,
            a.fg_valid ,
            a.sort ,
            a.creator ,
            a.gmt_create ,
            a.operator ,
            a.gmt_modify ,
            count(c.id_score_sheet) AS sheetNum ,
            IFNULL(sum(d.score) , 0) AS sheetTotalScore ,
            b.na_skill_case AS naSkillCaseFrom
        FROM
            td_skill_case a
        LEFT JOIN cob_skill_case b ON a.id_from = b.id
        LEFT JOIN td_score_sheet c ON c.id_case = a.id_skill_case AND c.fg_active = '1'
        LEFT JOIN td_score_item d ON c.id_score_sheet = d.id_score_sheet AND d.fg_active = '1'
        WHERE
            a.id_model = #{idModel}
        AND a.fg_valid = '0'
        GROUP BY
            a.id ,
            a.id_skill_case ,
            a.id_model ,
            a.id_org ,
            a.id_from ,
            a.na_skill_case ,
            a.score_pass ,
            a.sd_skill_case_ca ,
            a.des_skill_case ,
            a.fg_active ,
            a.fg_valid ,
            a.sort ,
            a.creator ,
            a.gmt_create ,
            a.operator ,
            a.gmt_modify ,
            b.na_skill_case 
        LIMIT #{offset}, #{limit}
    </select>
    <select id="countExamPaper" resultType="java.lang.Long">
        <choose>
            <when test='sdSkillCa == "1".toString()'>
                select count(1) from td_item_store where id_org = #{idOrg} and fg_active = '1'
                <if test="idModel != null">
                    and id_model = #{idModel}
                </if>
                <if test="keywords != null and keywords != '' ">
                    and na_item_store like concat('%',#{keywords},'%')
                </if>
            </when>
            <when test='sdSkillCa == "2".toString()'>
                select count(1) from td_skill_case where id_org = #{idOrg} and fg_active = '1'
                <if test="idModel != null">
                    and id_model = #{idModel}
                </if>
                <if test="keywords != null and keywords != '' ">
                    and na_skill_case like concat('%',#{keywords},'%')
                </if>
            </when>
            <otherwise>
                select count(1) from td_sp_case where id_org = #{idOrg} and fg_active = '1'
                <if test="idModel != null">
                    and id_model = #{idModel}
                </if>
                <if test="keywords != null and keywords != '' ">
                    and na_sp_case like concat('%',#{keywords},'%')
                </if>
            </otherwise>
        </choose>
    </select>
    <select id="listExamPaper" resultType="com.osce.vo.biz.plan.template.PfExamPaperVo">
        <choose>
            <when test='sdSkillCa == "1".toString()'>
                select
                    id_item_store as id,
                    na_item_store as paperName,
                    des_item_store as paperDes
                from
                    td_item_store
                where
                    id_org = #{idOrg}
                and fg_active = '1'
                <if test="idModel != null">
                    and id_model = #{idModel}
                </if>
                <if test="keywords != null and keywords != '' ">
                    and na_item_store like concat('%',#{keywords},'%')
                </if>
            </when>
            <when test='sdSkillCa == "2".toString()'>
                select
                    id,
                    na_skill_case as paperName,
                    des_skill_case as paperDes
                from
                    td_skill_case
                where
                    id_org = #{idOrg}
                and fg_active = '1'
                <if test="idModel != null">
                    and id_model = #{idModel}
                </if>
                <if test="keywords != null and keywords != '' ">
                    and na_skill_case like concat('%',#{keywords},'%')
                </if>
            </when>
            <otherwise>
                select
                    id,
                    na_sp_case as paperName,
                    des_sp_case as paperDes
                from
                    td_sp_case
                where
                    id_org = #{idOrg}
                and fg_active = '1'
                <if test="idModel != null">
                    and id_model = #{idModel}
                </if>
                <if test="keywords != null and keywords != '' ">
                    and na_sp_case like concat('%',#{keywords},'%')
                </if>
            </otherwise>
        </choose>
        LIMIT #{offset}, #{limit}
    </select>
    <select id="selectTpInsStation" resultType="com.osce.entity.TpInsStation">
        SELECT
            id_plan, sd_skill_ca
        FROM
            tp_ins_station a
        WHERE
            a.id_ins_station = #{idInsStation}
    </select>
    <select id="listPaperSheet" resultType="com.osce.vo.biz.plan.template.PfExamPaperSheetVo">
        <choose>
            <when test='sdSkillCa == "2".toString()'>
                SELECT
                    id_score_sheet ,
                    na_score_sheet
                FROM
                    td_score_sheet a
                LEFT JOIN td_skill_case b ON a.id_case = b.id_skill_case
                WHERE
                    a.fg_active = '1'
                AND b.fg_active = '1'
                AND b.id = #{idPaper}
            </when>
            <otherwise>
                SELECT
                    id_score_sheet ,
                    na_score_sheet
                FROM
                    td_score_sheet a
                LEFT JOIN td_sp_case b ON a.id_case = b.id_case
                WHERE
                    a.fg_active = '1'
                AND b.fg_active = '1'
                AND b.id = #{idPaper}
            </otherwise>
        </choose>
    </select>

</mapper>